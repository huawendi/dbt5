#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-5 Authors
#

DBNAMEARG=""
# SHAREDIR="@CMAKE_INSTALL_PREFIX@/share/dbt5/postgresql"
SHAREDIR="/home/hwd/dbt5/storedproc/pgsql/pgsql"
TYPE="plpgsql"

# Special case to override defaults if in an AppImage environment.
if [ ! "${APPDIR}" = "" ]; then
	SHAREDIR="${APPDIR}/usr/share/dbt5/postgresql"
fi

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 5 (DBT-5) PostgreSQL user defined functions loader

Usage:
  $(basename "${0}") [OPTIONS]

General options:
  -d DBNAME      PGDATABASE name"
  -i SHAREDIR    PostgreSQL support files location, default ${SHAREDIR}
  -p PORT        PostgreSQL port
  -t TYPE        User defined function type (c|plpgsql), default plpgsql
  -V, --version  Output version information, then exit
  -?, --help     Output this help, then exit

@HOMEPAGE@
EOF
}

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-d)
		shift
		DBNAMEARG="-d ${1}"
		;;
	(-d*)
		DBNAMEARG="-d ${1#*-d}"
		;;
	(-i)
		shift
		SHAREDIR="${1}"
		;;
	(-i*)
		SHAREDIR="${1#*-i}"
		;;
	(-p)
		shift
		PORTARG="-p ${1}"
		;;
	(-p*)
		PORTARG="-p ${1#*-p}"
		;;
	(-t)
		shift
		TYPE="${1}"
		;;
	(-t*)
		TYPE="${1#*-t}"
		;;
	(-V | --version)
		echo "dbt5 (Database Test 5) v@PROJECT_VERSION@"
		exit 0
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

PSQL="psql -X ${PORTARG} -e ${DBNAMEARG}"

if [ "${TYPE}" = "c" ]; then
	SHAREDIR="$(pg_config --sharedir)"
	eval "${PSQL} -f ${SHAREDIR}/contrib/broker_volume.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/customer_position.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/data_maintenance.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/market_watch.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/security_detail.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/trade_lookup.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/trade_order.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/trade_result.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/trade_status.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/contrib/trade_update.sql" || exit 1
elif [ "${TYPE}" = "plpgsql" ]; then
	eval "${PSQL} -f ${SHAREDIR}/broker_volume.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/customer_position.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/data_maintenance.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/market_watch.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/security_detail.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/trade_lookup.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/trade_order.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/trade_result.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/trade_status.sql" || exit 1
	eval "${PSQL} -f ${SHAREDIR}/trade_update.sql" || exit 1
else
	echo "unknown stored function type: ${TYPE}"
	exit 2
fi
